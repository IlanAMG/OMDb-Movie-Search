{"ast":null,"code":"import './config';\nimport 'firebase/auth';\nimport * as firebase from 'firebase';\nconst auth = firebase.auth();\nexport const getCurrentUser = () => {\n  return auth.currentUser.email;\n};\nexport const signUp = identifiants => {\n  return new Promise((resolve, reject) => {\n    auth.createUserWithEmailAndPassword(identifiants.email, identifiants.psw).then(() => {\n      resolve(true);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const signIn = identifiants => {\n  return new Promise((resolve, reject) => {\n    auth.signInWithEmailAndPassword(identifiants.email, identifiants.psw).then(user => {\n      resolve(user);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const signOut = () => {\n  auth.signOut().then(() => {\n    console.log('SignOut successfully');\n    window.location.reload();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const authenticateUser = () => {\n  return new Promise((resolve, reject) => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log(user);\n        resolve(user);\n      } else {\n        reject('No user signed in');\n      }\n    });\n  });\n};\nexport const sendEmailVerification = () => {\n  const user = auth.currentUser;\n  user.sendEmailVerification().then(() => {\n    console.log('Email successfully send');\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const resetPassword = email => {\n  return new Promise((resolve, reject) => {\n    auth.sendPasswordResetEmail(email).then(() => {\n      resolve(true);\n      console.log(`Email successfully send to ${email}`);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/omdb-movie-starter/src/firebase/Auth.js"],"names":["firebase","auth","getCurrentUser","currentUser","email","signUp","identifiants","Promise","resolve","reject","createUserWithEmailAndPassword","psw","then","catch","err","signIn","signInWithEmailAndPassword","user","signOut","console","log","window","location","reload","authenticateUser","onAuthStateChanged","sendEmailVerification","resetPassword","sendPasswordResetEmail"],"mappings":"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","sourcesContent":["import './config';\nimport 'firebase/auth'\nimport * as firebase from 'firebase'\n\nconst auth = firebase.auth()\n\nexport const getCurrentUser = () => {\n    return auth.currentUser.email\n}\n\nexport const signUp = identifiants => {\n    return new Promise((resolve, reject) => {\n        auth.createUserWithEmailAndPassword(identifiants.email, identifiants.psw)\n            .then(() => {\n                resolve(true)\n            })\n            .catch(err => {\n                reject(err)\n            })\n    })\n}\n\nexport const signIn = identifiants => {\n    return new Promise((resolve, reject) => {\n        auth.signInWithEmailAndPassword(identifiants.email, identifiants.psw)\n            .then(user => {\n                resolve(user)\n            })\n            .catch(err => {\n                reject(err)\n            })\n    })\n}\n\nexport const signOut = () => {\n        auth.signOut()\n            .then(() => {\n                console.log('SignOut successfully')\n                window.location.reload()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n}\n\nexport const authenticateUser = () => {\n    return new Promise((resolve, reject) => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                console.log(user)\n                resolve(user)\n            } else {\n                reject('No user signed in')\n            }\n        })\n    })\n}\n\nexport const sendEmailVerification = () => {\n    const user = auth.currentUser\n    user.sendEmailVerification().then(() => {\n        console.log('Email successfully send')\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\nexport const resetPassword = email => {\n    return new Promise((resolve, reject) => {\n        auth.sendPasswordResetEmail(email).then(() => {\n            resolve(true)\n            console.log(`Email successfully send to ${email}`)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}