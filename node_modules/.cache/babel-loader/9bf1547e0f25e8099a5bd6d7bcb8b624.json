{"ast":null,"code":"var _jsxFileName = \"/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/starter/omdb-movie-starter/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Links, FavoriteBtn, Header, Modal, Result, Results, SearchForm } from './components';\nconst constants = {\n  BASE_URL: 'http://www.omdbapi.com/?',\n  API_KEY: 'c044a8f8'\n};\n\nconst App = () => {\n  const [state, setState] = useState({\n    isSearching: false,\n    active: \"search\",\n    movies: [],\n    favorites: [],\n    query: \"\" //resultat de la requête\n\n  });\n\n  const onTextChange = input => {\n    setState({ ...state,\n      isSearching: input.length > 0,\n      query: input\n    }); // on verifie si l'user tape ou non\n\n    console.log(input);\n  };\n\n  const handleClick = link => {\n    setState({ ...state,\n      active: link\n    });\n  };\n\n  const toggleFavorite = movie => {\n    if (state.active === 'search') {\n      const updated = state.movies.map(m => {\n        if (m.imdb === movie.imdb) {\n          m.isFavorite = !m.isFavorite;\n          return m;\n        }\n\n        return m;\n      });\n      const favorites = updated.filter(m => isFavorite);\n      setState({ ...state,\n        movies: updated,\n        favorites: state.favorites.concat(movie)\n      });\n    }\n  };\n\n  const fetchAPI = () => {\n    if (!state.query) {\n      return;\n    }\n\n    const url = `${constants.BASE_URL}s=${state.query}&apikey=${constants.API_KEY}`;\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText);\n      }\n\n      return res.json();\n    }).then(data => {\n      if (data.Response !== 'False') setState({ ...state,\n        movies: create(data.Search)\n      });\n    });\n  };\n\n  const create = data => {\n    return data.map(item => {\n      return {\n        title: item.Title,\n        imdb: item.imdbID,\n        year: item.Year,\n        type: item.Type,\n        poster: item.Poster,\n        isFavorite: false\n      };\n    });\n  };\n\n  useEffect(() => {\n    fetchAPI();\n  }, [state.query]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    id: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Links, Object.assign({}, state, {\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(SearchForm, {\n    onTextChange: onTextChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Results, Object.assign({}, state, {\n    toggleFavorite: toggleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/starter/omdb-movie-starter/src/App.js"],"names":["React","useState","useEffect","Links","FavoriteBtn","Header","Modal","Result","Results","SearchForm","constants","BASE_URL","API_KEY","App","state","setState","isSearching","active","movies","favorites","query","onTextChange","input","length","console","log","handleClick","link","toggleFavorite","movie","updated","map","m","imdb","isFavorite","filter","concat","fetchAPI","url","fetch","then","res","ok","Error","statusText","json","data","Response","create","Search","item","title","Title","imdbID","year","Year","type","Type","poster","Poster"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Links, FavoriteBtn, Header, Modal, Result, Results, SearchForm} from './components'\n\nconst constants = {\n  BASE_URL: 'http://www.omdbapi.com/?',\n  API_KEY: 'c044a8f8'\n}\n\nconst App = () => {\n  const [state, setState] = useState({\n    isSearching: false,\n    active: \"search\",\n    movies: [],\n    favorites: [],\n    query: \"\" //resultat de la requête\n  });\n\n  const onTextChange = input => {\n    setState({ ...state, isSearching: input.length > 0, query: input }) // on verifie si l'user tape ou non\n    console.log(input)\n  }\n\n  const handleClick = link => {\n    setState({...state, active: link})\n  }\n\n  const toggleFavorite = movie => {\n    if (state.active === 'search') {\n    const updated = state.movies.map(m => {\n      if (m.imdb === movie.imdb) {\n        m.isFavorite = !m.isFavorite\n        return m\n      }\n      return m\n      })\n      const favorites = updated.filter(m => isFavorite)\n      setState({...state, movies: updated, favorites: state.favorites.concat(movie)})\n    } \n  }\n\n  const fetchAPI = () => {\n    if(!state.query) { return }\n    const url = `${constants.BASE_URL}s=${state.query}&apikey=${constants.API_KEY}`\n    fetch(url)\n      .then(res => {\n        if(!res.ok) { throw Error(res.statusText)}\n        return res.json()\n      })\n      .then(data => {\n        if(data.Response !== 'False')\n        setState({...state, movies: create(data.Search)})\n      })\n  }\n\n  const create = data => {\n    return data.map(item => {\n      return {title: item.Title, imdb: item.imdbID, year: item.Year, type: item.Type, poster: item.Poster, isFavorite: false}\n    })\n  }\n\n  useEffect(() => {\n    fetchAPI()\n  }, [state.query])\n\n  return (\n    <div className=\"App\" id=\"search-container\">\n      <Header />\n      <Links {...state} handleClick={handleClick}/>\n      <main>\n        <SearchForm onTextChange={onTextChange}/>\n        <Results {...state} toggleFavorite={toggleFavorite} />\n      </main>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}