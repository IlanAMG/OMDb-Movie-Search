{"ast":null,"code":"import './config';\nimport * as firebase from 'firebase';\nconst collections = {\n  favorites: \"favorites\"\n};\nconst db = firebase.firestore(); //write & remove\n\nexport const write = item => {\n  item.isFavorite = true;\n  db.collection(collections.favorites).doc(item.imdb).set(item).then(() => {\n    console.log(\"Document successfully written!\");\n  }).catch(error => {\n    console.error(\"Error writing document: \", error);\n  });\n};\nexport const remove = item => {\n  db.collection(collections.favorites).doc(item.imdb).delete().then(() => {\n    console.log(\"Le doc a été retiré avec succès\");\n  }).catch(error => {\n    console.error(\"Erreur à la suppression du document\", error);\n  });\n}; //read\n\nexport const read = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(collections.favorites).get().then(querySnapshot => {\n      resolve(querySnapshot);\n    }).catch(err => reject(err));\n  });\n};","map":{"version":3,"sources":["/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/omdb-movie-starter/src/firebase/Database.js"],"names":["firebase","collections","favorites","db","firestore","write","item","isFavorite","collection","doc","imdb","set","then","console","log","catch","error","remove","delete","read","Promise","resolve","reject","get","querySnapshot","err"],"mappings":"AAAA,OAAO,UAAP;AACA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAApB;AAIA,MAAMC,EAAE,GAAGH,QAAQ,CAACI,SAAT,EAAX,C,CAEA;;AAEA,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAI;AACzBA,EAAAA,IAAI,CAACC,UAAL,GAAkB,IAAlB;AACAJ,EAAAA,EAAE,CAACK,UAAH,CAAcP,WAAW,CAACC,SAA1B,EAAqCO,GAArC,CAAyCH,IAAI,CAACI,IAA9C,EAAoDC,GAApD,CAAwDL,IAAxD,EACKM,IADL,CACU,MAAM;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACC,GAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACC,GANL;AAOH,CATM;AAWP,OAAO,MAAMC,MAAM,GAAGX,IAAI,IAAI;AAC1BH,EAAAA,EAAE,CAACK,UAAH,CAAcP,WAAW,CAACC,SAA1B,EAAqCO,GAArC,CAAyCH,IAAI,CAACI,IAA9C,EAAoDQ,MAApD,GACKN,IADL,CACU,MAAM;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZH,IAAAA,OAAO,CAACG,KAAR,CAAc,qCAAd,EAAqDA,KAArD;AACH,GANL;AAOH,CARM,C,CAUP;;AAEA,OAAO,MAAMG,IAAI,GAAG,MAAM;AACtB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCnB,IAAAA,EAAE,CAACK,UAAH,CAAcP,WAAW,CAACC,SAA1B,EACKqB,GADL,GAEKX,IAFL,CAEUY,aAAa,IAAI;AACnBH,MAAAA,OAAO,CAACG,aAAD,CAAP;AACH,KAJL,EAKKT,KALL,CAKWU,GAAG,IAAIH,MAAM,CAACG,GAAD,CALxB;AAMH,GAPM,CAAP;AAQH,CATM","sourcesContent":["import './config';\nimport * as firebase from 'firebase'\n\nconst collections = {\n    favorites: \"favorites\"\n}\n\nconst db = firebase.firestore()\n\n//write & remove\n\nexport const write = item => {\n    item.isFavorite = true\n    db.collection(collections.favorites).doc(item.imdb).set(item)\n        .then(() => {\n        console.log(\"Document successfully written!\");\n        })\n        .catch(error => {\n        console.error(\"Error writing document: \", error);\n        });\n}\n\nexport const remove = item => {\n    db.collection(collections.favorites).doc(item.imdb).delete()\n        .then(() => {\n            console.log(\"Le doc a été retiré avec succès\")\n        })\n        .catch(error => {\n            console.error(\"Erreur à la suppression du document\", error);\n        })\n}\n\n//read\n\nexport const read = () => {\n    return new Promise((resolve, reject) => {\n        db.collection(collections.favorites)\n            .get()\n            .then(querySnapshot => {\n                resolve(querySnapshot)\n            })\n            .catch(err => reject(err))\n    })\n}       "]},"metadata":{},"sourceType":"module"}