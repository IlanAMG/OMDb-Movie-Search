{"ast":null,"code":"var _jsxFileName = \"/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/omdb-movie-starter/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Links, Header, Modal, Results, SearchForm } from './components';\nimport { read } from './firebase/Database';\nimport { authenticateUser } from './firebase/Auth';\nconst constants = {\n  BASE_URL: 'http://www.omdbapi.com/?',\n  API_KEY: 'c044a8f8'\n};\n\nconst App = () => {\n  const [state, setState] = useState({\n    isSearching: false,\n    active: \"search\",\n    movies: [],\n    favorites: [],\n    query: \"\",\n    //resultat de la requête,\n    currentUser: null\n  });\n\n  const onTextChange = input => {\n    setState({ ...state,\n      isSearching: input.length > 0,\n      query: input\n    }); // on verifie si l'user tape ou non\n  };\n\n  const handleClick = link => {\n    setState({ ...state,\n      active: link,\n      query: \"\"\n    });\n  };\n\n  const toggleFavorite = () => {\n    fetchDB(state.currentUser);\n  };\n\n  const fetchAPI = () => {\n    if (!state.query) {\n      return;\n    }\n\n    const url = `${constants.BASE_URL}s=${state.query}&apikey=${constants.API_KEY}`;\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText);\n      }\n\n      return res.json();\n    }).then(data => {\n      if (data.Response !== 'False') setState({ ...state,\n        movies: create(data.Search)\n      });\n    });\n  };\n\n  const fetchDB = user => {\n    read().then(snapshot => {\n      const favorites = snapshot.docs.filter(doc => doc.data().user === user.email).map(doc => doc.data().item);\n      const imdbs = favorites.map(fav => fav.imdb);\n      const updated = state.movies.map(movie => {\n        movie.isFavorite = imdbs.includes(movie.imdb);\n        return movie;\n      });\n      setState({ ...state,\n        favorites: favorites,\n        movies: updated\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const create = data => {\n    const imdbs = state.favorites.map(fav => fav.imdb);\n    return data.map(item => {\n      return {\n        title: item.Title,\n        imdb: item.imdbID,\n        year: item.Year,\n        type: item.Type,\n        poster: item.Poster,\n        isFavorite: imdbs.includes(item.imdbID)\n      };\n    });\n  };\n\n  useEffect(() => {\n    fetchAPI(); // eslint-disable-next-line\n  }, [state.query]);\n  useEffect(() => {\n    authenticateUser().then(user => {\n      setState({ ...state,\n        currentUser: user\n      });\n    }).catch(() => {\n      setState({ ...state,\n        currentUser: null\n      });\n    }); // eslint-disable-next-line\n  }, [state.currentUser]);\n  useEffect(() => {\n    fetchDB(state.currentUser);\n  }, [state.currentUser, state.active]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    id: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Modal, Object.assign({}, state, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Header, Object.assign({}, state, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(Links, Object.assign({}, state, {\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(SearchForm, {\n    query: state.query,\n    onTextChange: onTextChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Results, Object.assign({}, state, {\n    toggleFavorite: toggleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Ilan/PROGRAMMATION/FORMATION/UDEMY_OMDdAPI_Films/omdb-movie-starter/src/App.js"],"names":["React","useState","useEffect","Links","Header","Modal","Results","SearchForm","read","authenticateUser","constants","BASE_URL","API_KEY","App","state","setState","isSearching","active","movies","favorites","query","currentUser","onTextChange","input","length","handleClick","link","toggleFavorite","fetchDB","fetchAPI","url","fetch","then","res","ok","Error","statusText","json","data","Response","create","Search","user","snapshot","docs","filter","doc","email","map","item","imdbs","fav","imdb","updated","movie","isFavorite","includes","catch","err","console","log","title","Title","imdbID","year","Year","type","Type","poster","Poster"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Links, Header, Modal, Results, SearchForm} from './components'\nimport { read } from './firebase/Database'\nimport { authenticateUser } from './firebase/Auth'\n\nconst constants = {\n  BASE_URL: 'http://www.omdbapi.com/?',\n  API_KEY: 'c044a8f8'\n}\n\nconst App = () => {\n  const [state, setState] = useState({\n    isSearching: false,\n    active: \"search\",\n    movies: [],\n    favorites: [],\n    query: \"\", //resultat de la requête,\n    currentUser: null\n  });\n\n  const onTextChange = input => {\n    setState({ ...state, isSearching: input.length > 0, query: input }) // on verifie si l'user tape ou non\n  }\n\n  const handleClick = link => {\n    setState({...state, active: link, query: \"\"})\n  }\n\n  const toggleFavorite = () => {\n    fetchDB(state.currentUser)\n  }\n\n  const fetchAPI = () => {\n    if(!state.query) { return }\n    const url = `${constants.BASE_URL}s=${state.query}&apikey=${constants.API_KEY}`\n    fetch(url)\n      .then(res => {\n        if(!res.ok) { throw Error(res.statusText)}\n        return res.json()\n      })\n      .then(data => {\n        if(data.Response !== 'False')\n        setState({...state, movies: create(data.Search)})\n      })\n  }\n\n  const fetchDB = user => {\n    read()\n    .then(snapshot => {\n      const favorites = snapshot.docs.filter(doc => doc.data().user === user.email).map(doc => doc.data().item)\n      const imdbs = favorites.map(fav => fav.imdb)\n      const updated = state.movies.map(movie => {\n        movie.isFavorite = imdbs.includes(movie.imdb)\n        return movie\n      })\n      setState({...state, favorites: favorites, movies: updated})\n    })\n    .catch(err => console.log(err))\n  }\n\n  const create = data => {\n    const imdbs = state.favorites.map(fav => fav.imdb)\n    return data.map(item => {\n      return {title: item.Title, imdb: item.imdbID, year: item.Year, type: item.Type, poster: item.Poster, isFavorite: imdbs.includes(item.imdbID)}\n    })\n  }\n\n  useEffect(() => {\n    fetchAPI()\n    // eslint-disable-next-line\n  }, [state.query])\n\n  useEffect(() => {\n    authenticateUser().then(user => {\n      setState({...state, currentUser: user})\n    }).catch(() => {\n      setState({...state, currentUser: null})\n    })\n    // eslint-disable-next-line\n  }, [state.currentUser])\n\n  useEffect(() => {\n    fetchDB(state.currentUser)\n  }, [state.currentUser, state.active])\n\n  return (\n    <div className=\"App\" id=\"search-container\">\n      <Modal {...state} />\n      <Header {...state} />\n      <Links {...state} handleClick={handleClick}/>\n      <main>\n        <SearchForm query={state.query} onTextChange={onTextChange}/>\n        <Results {...state} toggleFavorite={toggleFavorite} />\n      </main>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}